// import { useState } from 'react';
// import './App.css';


// function App() {

//   //1. Ïú†Ï†ÄÍ∞Ä ÏûÖÎ†•Ìïú todoÍ∞íÏùò ÏÉÅÌÉúÍ¥ÄÎ¶¨ 
//   // 1-1. ÏÉÅÌÉúÎ•º ÎßåÎì§Í≥†, inputÎ∂ÄÎ∂ÑÍ≥º Ïó∞Í≤∞Ìï¥Ï§ÄÎã§.(valueÍ∞íÍ≥º Ïú†Ï†ÄÍ∞Ä ÏûÖÎ†•ÌïòÎ©¥ Î≥ÄÌïòÎäî Í∞í onChangeÏÑ§Ï†ï, onChangeÌï† Ïàò ÏûàÎäî Ìï®Ïàò ÏÉàÎ°ú ÎßåÎì§Í∏∞)
//   //2. Ïã§ÏßàÏ†ÅÏúºÎ°ú Ï∂îÍ∞ÄÌïú todo Í∞íÏùò ÏÉÅÌÉú Í¥ÄÎ¶¨ (Î∞∞Ïó¥)
//   //  2-1. Ï∂îÍ∞ÄÌïú todoÍ∞íÏùÑ mapÏúºÎ°ú ÎèåÎ†§Î¥Ñ 
//   //3. Ï∂îÍ∞ÄÌïòÍ∏∞ Î≤ÑÌäºÏùò Í∏∞Îä•
//   // 3-1. Ï∂îÍ∞ÄÌïòÍ∏∞ Î≤ÑÌäº ÌÅ¥Î¶≠ Ïãú functionÏùÑ ÏÉùÏÑ±, Î∞∞Ïó¥Î°ú todosÎ•º Î∞õÏïÑÏïºÌï®. 
//   //4. ÏàòÏ†ïÌïòÍ∏∞ (ÏàòÏ†ï Î≤ÑÌäº ÌÅ¥Î¶≠Ïãú, ÏûÖÎ†•Ìï† Ïàò ÏûàÎäî Ï∞ΩÏúºÎ°ú Î≥ÄÍ≤Ω, ÏôÑÎ£åÎ≤ÑÌäºÏúºÎ°ú Î≥ÄÍ≤Ω) 
//   // 4-1. onClick Í∏∞Îä•Ïù¥Ïö©Ìï¥ Ìï®Ïàò ÏÉùÏÑ±, Ïó∞Í≤∞ . Ìï®ÏàòÏóêÎäî ÏûÖÎ†•Ìï† Ïàò ÏûàÎäî Ï∞ΩÏúºÎ°ú Î≥ÄÍ≤Ω 
//   // Ïó¨Îü¨ todosÏùò Ïù∏Îç±Ïä§ Ï§ë, ÏÇ¨Ïö©ÏûêÍ∞Ä ÌÅ¥Î¶≠Ìï¥ÏÑú Î≥ÄÍ≤ΩÌïòÍ≥†Ïûê ÌïòÎäî todoÏùò indexÎ•º Í∞ÄÏ†∏ÏôÄÏïºÌï®.
//   // Ïù¥Îïå, isEdit Ïùò boolean Í∞íÏúºÎ°ú ÏÉÅÌÉúÍ¥ÄÎ¶¨Ìï† Ïàò ÏûàÎäî useStateÎ•º ÌïòÎÇò ÏÉùÏÑ±Ìï¥ÏïºÌï®. 
//   //5. ÏÇ≠Ï†úÌïòÍ∏∞

//   const [inputTodo, setInputTodo] = useState("");//ÏûÖÎ†•Ï∞ΩÏÉÅÌÉúÍ¥ÄÎ¶¨ 
//   const [todos, setTodos] = useState([]); //Ï∂îÍ∞ÄÌïúÏùº ÏÉÅÌÉúÍ¥ÄÎ¶¨
//   const [isEdit, setIsEdit] = useState(false);//ÏàòÏ†ïÏÉÅÌÉúÍ¥ÄÎ¶¨
//   const [editIndex, setEditIndex] = useState();//Ïó¨Îü¨Í∞úÏùò Ïù∏Îç±Ïä§ Ï§ë ÏàòÏ†ï/ÏÑ†ÌÉùÌïòÍ≥†ÏûêÌïòÎäî indexÏÉÅÌÉúÍ¥ÄÎ¶¨
//   const [tempInput, setTempInput] = useState(""); //ÏàòÏ†ïÏ§ë ÏûÑÏãú ÏûÖÎ†•Í∞í ÏÉÅÌÉúÍ¥ÄÎ¶¨.
//   const [checkTodos, setCheckTodos] = useState([]);//Ïó¨Îü¨Í∞úÍ∏∞ ÎïåÎ¨∏Ïóê Î∞∞Ïó¥Î°ú Ïù∏Îç±Ïä§Í∞Ä Îì§Ïñ¥Í∞ÄÏïºÌï®.(ÏÑ†ÌÉùÎêú Î™©Î°ùÏùÑ ÏòÆÍ≤®ÏïºÏïº)
  

//   function inputTodoChange(e){
//     setInputTodo(e.target.value);
//     }

//   function addTodo(){
//     setTodos([...todos,inputTodo]);
//     setInputTodo("");
//   }
  
//   function editTodo(index){
//     //Ïó¨Îü¨ Í∞ú Ï§ë ÏàòÏ†ïÌïòÍ≥†Ïûê ÌïòÎäî indexÎ•º Í∞ÄÏ†∏ÏôÄÏïºÌï®. Î™®Îëê ÏàòÏ†ïÎê† Ïàò ÏóÜÏúºÎãàÍπå. 
//     const editedTodo = todos[index];//ÏàòÏ†ïÌï† todoÏùò Í∞í Í∞ÄÏ†∏Ïò§Í∏∞. 
//     setTempInput(editedTodo);//Ïù¥ÎØ∏ Ï†ÅÌòÄÏûàÎäî todoÏûÖÎ†•Ï∞ΩÏóê ÌëúÏãú. 
//     setIsEdit(true);
//     setEditIndex(index);//ÏàòÏ†ïÌï† Ïù∏Îç±Ïä§ Ï†ÄÏû• 
//   }

//   function doneTodo(){
//     //setTodoÎäî Î∞∞Ïó¥ .
//     const updatedTodo = [...todos];
//     updatedTodo[editIndex] = tempInput; //Ïù¥Î∂ÄÎ∂Ñ Îã§Ïãú Ìï¥Î≥¥Í∏∞. 
//     setTodos(updatedTodo);
//     setIsEdit(false);
  
//   }

//   function deleteTodo(index){
//     const deletedTodo = todos.filter((_, i) => index !== i ); 
//     setTodos(deletedTodo);

//   }
 
//   function clickCheckbox(todoIndex){
//     const findIndex = checkTodos.indexOf(todoIndex);
//     if(findIndex === -1) {
//       const copyCheckedTodos = [...checkTodos, todoIndex];
//       setCheckTodos(copyCheckedTodos);
      
//     } else{
//       const copyCheckedTodos = [...checkTodos];
//       copyCheckedTodos.splice(findIndex, 1);
//       setCheckTodos(copyCheckedTodos);
//     }
    
//   }


//   return (
//     <div className="App">
//         <div className="todo-container">
//       <div className="todo-header" style={{color:"#2F4157"}}>üß∂Ïò§ÎäòÏùò Ìï†Ïùºüß∂</div>

//       <div style={{marginBottom: "10px", display: 'flex', flexDirection: 'row'}}>
        
//           <input
//             type="text"
//             className="todo-input"
//             id="todoInput"
//             placeholder="Ìï† ÏùºÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî"   
//             value={inputTodo}
//             onChange={inputTodoChange}
//           />
//         </div>
//           <button className="add-btn" style={{marginBottom: 10}} onClick={addTodo}>Ï∂îÍ∞ÄÌïòÍ∏∞</button>
//           <button className="select-delete-btn" onClick={addTodo}>ÏÑ†ÌÉù ÏÇ≠Ï†ú</button>


     
//       <ul className="todo-list" id="todo-list">
//        {todos.map((todo,index)=> (
//           <li key={index} className="todo-item">
//             <input
//               type="checkbox"
//               onClick={()=>clickCheckbox(index)}
//             />
//             { isEdit && editIndex === index ? 
//             <input
//               type="text"
//               value={tempInput} 
//               onChange={(e)=>setTempInput(e.target.value)}
//               />
//             :
//             <span>{todo}</span>
//             }  

//             { isEdit && editIndex === index ?
//              <button className="update-btn" onClick={doneTodo}>ÏôÑÎ£å</button>
//              : 
            
//              <>
//              <button className="update-btn" onClick={()=> editTodo(index)}>ÏàòÏ†ï</button>
//              <button className="delete-btn" onClick={()=> deleteTodo(index)}>ÏÇ≠Ï†ú</button>
//              </>
//             }
          
         
          
//           </li>

//        ))}
       
        
          
      
//       </ul>
//     </div>
//     </div>
//   );
// }

// export default App;